apply plugin: 'idea'
apply plugin: 'eclipse'

// add rest.li's gradle plugins so they can be used throughout project
buildscript {
  repositories {
    mavenLocal()
    mavenCentral()
  }
  dependencies {
    classpath "com.linkedin.pegasus:gradle-plugins:1.15.9"
  }
}

task wrapper(type: Wrapper) {
  gradleVersion = '1.12'
}

final String pegasusVersion = "1.15.9"
ext.spec = [
  "product" : [
    "pegasus" : [
      "data" : "com.linkedin.pegasus:data:"+pegasusVersion,
      "generator" : "com.linkedin.pegasus:generator:"+pegasusVersion,
      "restliClient" : "com.linkedin.pegasus:restli-client:"+pegasusVersion,
      "restliServer" : "com.linkedin.pegasus:restli-server:"+pegasusVersion,
      "restliTools" : "com.linkedin.pegasus:restli-tools:"+pegasusVersion,
      "gradlePlugins" : "com.linkedin.pegasus:gradle-plugins:"+pegasusVersion,
      "restliNettyStandalone" : "com.linkedin.pegasus:restli-netty-standalone:"+pegasusVersion,
      "restliServerStandalone" : "com.linkedin.pegasus:restli-server-standalone:"+pegasusVersion,
      "restliSpringBridge" : "com.linkedin.pegasus:restli-spring-bridge:"+pegasusVersion
    ]
  ]
]

ext.externalDependency = [
  'logbackClassic': 'ch.qos.logback:logback-classic:1.0.13',
  'logbackCore': 'ch.qos.logback:logback-core:1.0.13'
]

subprojects {
  apply plugin: 'eclipse'
  apply plugin: 'maven'
  apply plugin: 'idea'
  apply plugin: 'eclipse'

  afterEvaluate {
    if (project.plugins.hasPlugin('java')) {
      sourceCompatibility = JavaVersion.VERSION_1_6
    }

    // add the standard pegasus dependencies wherever the plugin is used
    if (project.plugins.hasPlugin('pegasus')) {
      dependencies {
        dataTemplateCompile spec.product.pegasus.data
        restClientCompile spec.product.pegasus.restliClient
      }
    }
  }

  repositories {
    mavenLocal()
    mavenCentral()
  }
}

